version: '3.8'

services:
  auth-service:
    build: ./auth-service
    ports:
      - "8004:8000"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - DATABASE_URL=postgresql://postgres:password@db:5432/decentralized_id
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  did-service:
    build: ./did-service
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/decentralized_id
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  credential-service:
    build: ./credential-service
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/decentralized_id
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  verification-service:
    build: ./verification-service
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/decentralized_id
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - prometheus

  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=decentralized_id
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  prometheus_data:
  grafana_data:
  db-data:

networks:
  app-network:
    driver: bridge
